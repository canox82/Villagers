{"version":3,"sources":["Info.js","MainContainer.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Info","React","Component","message","day_start","hour_start","MainContainer","text","unshift","day","hour","this","props","hours","type","qt","Math","floor","random","parentSearchRaw","putMessage","gameOver","food","villagers","buildHouse","wood","stone","buildFarm","buildSawmill","buildStoneMine","buildGoldMine","cooldown_resource","cooldown","className","map","item","index","style","color","disabled","onClick","searchRaw","Nav","gold","App","people","updateRaw","console","log","setState","state","savegame","JSON","parse","localStorage","getItem","interval","setInterval","tick","clearInterval","setItem","stringify","removeItem","saveGame","newGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45b56bc4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Info extends React.Component {\r\n    render(){\r\n        return (\r\n            <span>\r\n            <h5>Raw materials consumed</h5>\r\n            <ul>\r\n                <li>1 food X villager every day</li>\r\n                <li>2 wood X house every 10 days</li>\r\n                <li>5 wood X house every 30 days</li>\r\n            </ul>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport Info from './Info';\r\n\r\nconst message = [\"\"]\r\nvar day_start = 0\r\nvar hour_start = 0\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n    putMessage(text) {\r\n        message.unshift(text)\r\n    }\r\n\r\n    cooldown(day, hour) {\r\n        if (this.props.day > day) {\r\n            return this.props.hours + (24-hour)\r\n        } else {\r\n            return this.props.hours - hour\r\n        }\r\n    }\r\n\r\n    searchRaw(type) {\r\n        let qt = Math.floor(Math.random() * (2 - 0 + 1)) + 0\r\n        this.props.parentSearchRaw(type, qt);\r\n        this.putMessage(\"Gathered \" + qt + \" \" + type)\r\n        day_start = this.props.day\r\n        hour_start = this.props.hours\r\n    }\r\n    \r\n    render(){\r\n        const gameOver = this.props.food <= this.props.villagers\r\n        const buildHouse = this.props.wood >=20 && this.props.stone>=20\r\n        const buildFarm = this.props.wood >=40 && this.props.stone>=40\r\n        const buildSawmill = this.props.wood >=80 && this.props.stone>=80\r\n        const buildStoneMine = this.props.wood >=150 && this.props.stone>=100\r\n        const buildGoldMine = this.props.wood >=200 && this.props.stone>=200\r\n\r\n        const cooldown_resource = this.cooldown(day_start, hour_start) > 2\r\n\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <Info/>\r\n                    <h5>Messages:</h5>\r\n                    <div className=\"messages\">\r\n                        <ul>\r\n                            {message.map((item,index) => {\r\n                                return (\r\n                                    <li key={index}>{item}</li> \r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"action\">\r\n                    {gameOver ? (\r\n                        <span style={{color:'red'}}>Food Level critic!!!</span>\r\n                    ) : (\r\n                        <span style={{color:'green'}}>Food ok</span>\r\n                    )}\r\n                    <br />\r\n                    {/* Button for manual resource gathering */}\r\n                    <button disabled={!cooldown_resource} onClick={() => this.searchRaw('food')}>Search Food</button>\r\n                    <button disabled={!cooldown_resource} onClick={() => this.searchRaw('wood')}>Search Wood</button>\r\n                    <button disabled={!cooldown_resource} onClick={() => this.searchRaw('stone')}>Search Stone</button>\r\n                    <br />\r\n                    {/* Button for automatic resource gathering */}\r\n                    <button disabled={!buildHouse} onClick={() => this.putMessage(\"house\")}>Build House</button>\r\n                    <button disabled={!buildFarm} onClick={() => this.putMessage(\"farm\")}>Build Farm</button>\r\n                    <button disabled={!buildSawmill} onClick={() => this.putMessage(\"sawmill\")}>Build Sawmill</button>\r\n                    <button disabled={!buildStoneMine} onClick={() => this.putMessage(\"stone mine\")}>Build Stone Mine</button>\r\n                    <button disabled={!buildGoldMine} onClick={() => this.putMessage(\"gold mine\")}>Build Gold Mine</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContainer;","import React from 'react';\r\n\r\nclass Nav extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <span>D: {this.props.day}</span> <span>H: {this.props.hours} / VILLAGERS: {this.props.villagers}</span><br></br>\r\n                <span>Food: {this.props.food}</span> <span> / Wood: {this.props.wood} / Stone: {this.props.stone} / Gold: {this.props.gold}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport './App.css';\nimport MainContainer from './MainContainer'\nimport Nav from './Nav'\n\nclass App extends React.Component {\n\npeople = Math.floor(Math.random() * (5 - 2 + 1) + 2)\n    \nconstructor(props) {\n    super(props);\n    let savegame = JSON.parse(localStorage.getItem(\"VillagersSave\"))\n    if (savegame !== null) {\n      this.state = savegame\n    } else {\n      this.state = { \n        day: 0,\n        hours: 0,\n        villagers: this.people,\n        food: Math.floor(Math.random() * (7*this.people - 2*this.people + 1)) + 2*this.people,\n        wood: Math.floor(Math.random() * (50 - 20 + 1)) + 20,\n        stone: Math.floor(Math.random() * (50 - 20 + 1)) + 20,\n        gold: Math.floor(Math.random() * (50 - 20 + 1)) + 20,\n      }\n    }\n}\n\ntick() {\n  if (this.state.food>=this.state.villagers){\n    this.setState(state => ({\n        hours: state.hours +1\n    }));\n    if (this.state.hours>23) {\n      this.setState({\n        food: this.state.food - this.state.villagers,\n        day: this.state.day + 1,\n        hours: 0\n      })\n    }\n  } else if (this.state.food > 0){\n    this.setState(state => ({\n      hours: state.hours +1\n    }));\n    if (this.state.hours===24) {\n      this.setState({food:0})\n    }\n  }\n}\n\ncomponentDidMount() {\n  this.interval = setInterval(() => this.tick(), 1000)\n}\n\ncomponentWillUnmount() {\n    clearInterval(this.interval);\n}\n\nupdateRaw = (type, qt) => {\n  console.log(type, qt)\n  if (type==='food') {\n    this.setState({food: this.state.food + qt})\n  } else if (type ==='wood') {  \n      this.setState({wood: this.state.wood + qt})\n  } else if (type ==='stone') {\n      this.setState({stone: this.state.stone + qt})\n  }\n}\n\nsaveGame() {\n  console.log(\"save\", this.state)\n  localStorage.setItem(\"VillagersSave\", JSON.stringify(this.state))\n}\n\nnewGame() {\n  console.log(\"new\")\n  localStorage.removeItem(\"VillagersSave\")\n}\n  \nrender(){\n    return (\n        <div className=\"App\">\n          <h1>Villagers</h1>\n          <button onClick={() => this.saveGame()}>Save Game</button>\n                    <button onClick={() => this.newGame()}>New Game</button>\n          <Nav {...this.state}/>\n          <MainContainer {...this.state} parentSearchRaw={this.updateRaw} />\n        </div>\n      );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}