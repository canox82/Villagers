{"version":3,"sources":["Info.js","MainContainer.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Emoji","props","className","role","label","symbol","Info","React","Component","message","day_start","hour_start","MainContainer","text","unshift","day","hour","this","hours","type","qt","Math","floor","random","villagers","workers","parentSearchRaw","putMessage","parentBuildStructure","gameOver","food","buildHouse","wood","stone","buildFarm","buildSawmill","buildStoneMine","buildGoldMine","cooldown_resource","cooldown","map","item","index","style","color","disabled","onClick","searchRaw","buildStructure","Nav","gold","house","farm","sawmill","stoneMine","goldMine","App","people","updateRaw","setState","state","updateStructure","savegame","JSON","parse","localStorage","getItem","tot_struct","interval","setInterval","tick","clearInterval","console","log","setItem","stringify","removeItem","saveGame","newGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e13689c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Emoji = (props) => (\r\n    <span\r\n      className=\"emoji\"\r\n      role=\"img\"\r\n      aria-label={props.label ? props.label : \"\"}\r\n      aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n      {props.symbol}\r\n    </span>\r\n);\r\n\r\nclass Info extends React.Component {\r\n    render(){\r\n        return (\r\n            <span>\r\n            <center>\r\n            <b>Day expenses</b>\r\n            <table>\r\n                <tr><td>Villager</td><td>1<Emoji label=\"food\" symbol=\"🍔\" /></td></tr>\r\n                <tr><td>Worker</td><td>2<Emoji label=\"food\" symbol=\"🍔\" /></td></tr>\r\n                <tr><td>Building</td><td>1<Emoji label=\"wood\" symbol=\"🌲\" /></td></tr>\r\n            </table>\r\n            <br />\r\n            <b>Building Cost:</b>\r\n            <table>\r\n                <tr><td>House</td><td>20<Emoji label=\"wood\" symbol=\"🌲\" /></td><td>20<Emoji label=\"rock\" symbol=\"🧱\" /></td></tr>\r\n                <tr><td>Farm</td><td>40<Emoji label=\"wood\" symbol=\"🌲\" /></td><td>40<Emoji label=\"rock\" symbol=\"🧱\" /></td></tr>\r\n                <tr><td>Sawmill</td><td>80<Emoji label=\"wood\" symbol=\"🌲\" /></td><td>50<Emoji label=\"rock\" symbol=\"🧱\" /></td></tr>\r\n                <tr><td>Stone Mine</td><td>150<Emoji label=\"wood\" symbol=\"🌲\" /></td><td>80<Emoji label=\"rock\" symbol=\"🧱\" /></td></tr>\r\n                <tr><td>Gold Mine</td><td>200<Emoji label=\"wood\" symbol=\"🌲\" /></td><td>200<Emoji label=\"rock\" symbol=\"🧱\" /></td></tr>\r\n            </table>\r\n            <br />\r\n            <b>Building Bonus:</b>\r\n            <table>\r\n                <tr><td>House</td><td>4 Villagers</td><td>on build</td></tr>\r\n                <tr><td>Farm</td><td>+40<Emoji label=\"food\" symbol=\"🍔\" /></td><td>every 7 days</td></tr>\r\n                <tr><td>Sawmill</td><td>+30<Emoji label=\"wood\" symbol=\"🌲\" /></td><td>every 7 days</td></tr>\r\n                <tr><td>Stone Mine</td><td>+30<Emoji label=\"rock\" symbol=\"🧱\" /></td><td>every 7 days</td></tr>\r\n                <tr><td>Gold Mine</td><td>+15<Emoji label=\"coin\" symbol=\"💰\" /></td><td>every 7 days</td></tr>\r\n            </table>\r\n            </center>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport Info from './Info';\r\n\r\nconst message = [\"\"]\r\nvar day_start = 0\r\nvar hour_start = 0\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n    putMessage(text) {\r\n        message.unshift(text)\r\n    }\r\n\r\n    cooldown(day, hour) {\r\n        if (this.props.day > day) {\r\n            return this.props.hours + (24-hour)\r\n        } else {\r\n            return this.props.hours - hour\r\n        }\r\n    }\r\n\r\n    searchRaw(type) {\r\n        let qt = Math.floor(Math.random() * ((this.props.villagers-this.props.workers) - 0 + 1)) + 0\r\n        this.props.parentSearchRaw(type, qt);\r\n        this.putMessage(\"Gathered \" + qt + \" \" + type)\r\n        day_start = this.props.day\r\n        hour_start = this.props.hours\r\n    }\r\n\r\n    buildStructure(type) {\r\n        switch (type) {\r\n            case \"house\":\r\n                    this.putMessage(\"House builded, 4 villagers arrived\")\r\n                    this.props.parentBuildStructure(type);\r\n                    break\r\n            case \"farm\":\r\n                    this.putMessage(\"Farm builded, 1 worker used\")\r\n                    this.props.parentBuildStructure(type);\r\n                    break\r\n            case \"sawmill\":\r\n                    this.putMessage(\"Sawmill builded, 1 worker used\")\r\n                    this.props.parentBuildStructure(type);\r\n                    break\r\n            case \"stoneMine\":\r\n                    this.putMessage(\"Stone Mine builded, 1 worker used\")\r\n                    this.props.parentBuildStructure(type);\r\n                    break\r\n            case \"goldMine\":\r\n                    this.putMessage(\"Gold Mine builded, 1 worker used\")\r\n                    this.props.parentBuildStructure(type);\r\n                    break\r\n            default:\r\n                this.putMessage(\"Building not implemented\")\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const gameOver = this.props.food <= this.props.villagers + 2*this.props.workers\r\n        const buildHouse = this.props.wood >=20 && this.props.stone>=20\r\n        const buildFarm = this.props.wood >=40 && this.props.stone>=40 && this.props.villagers-this.props.workers>0\r\n        const buildSawmill = this.props.wood >=80 && this.props.stone>=50 && this.props.villagers-this.props.workers>0\r\n        const buildStoneMine = this.props.wood >=150 && this.props.stone>=80 && this.props.villagers-this.props.workers>0\r\n        const buildGoldMine = this.props.wood >=200 && this.props.stone>=200 && this.props.villagers-this.props.workers>0\r\n\r\n        const cooldown_resource = this.cooldown(day_start, hour_start) > 2\r\n\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <Info/>\r\n                    <h5>Messages:</h5>\r\n                    <div className=\"messages\">\r\n                        <ul>\r\n                            {message.map((item,index) => {\r\n                                return (\r\n                                    <li key={index}>{item}</li> \r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"action\">\r\n                    {gameOver ? (\r\n                        <span style={{color:'red'}}>Food Level critic!!!</span>\r\n                    ) : (\r\n                        <span style={{color:'green'}}>Food ok</span>\r\n                    )}\r\n                    <br />\r\n                    {/* Button for manual resource gathering */}\r\n                    <button disabled={!cooldown_resource} onClick={() => this.searchRaw('food')}>Search Food</button>\r\n                    <button disabled={!cooldown_resource} onClick={() => this.searchRaw('wood')}>Search Wood</button>\r\n                    <button disabled={!cooldown_resource} onClick={() => this.searchRaw('stone')}>Search Stone</button>\r\n                    <br />\r\n                    {/* Button for automatic resource gathering */}\r\n                    <button disabled={!buildHouse} onClick={() => this.buildStructure(\"house\")}>Build House</button>\r\n                    <button disabled={!buildFarm} onClick={() => this.buildStructure(\"farm\")}>Build Farm</button>\r\n                    <button disabled={!buildSawmill} onClick={() => this.buildStructure(\"sawmill\")}>Build Sawmill</button>\r\n                    <button disabled={!buildStoneMine} onClick={() => this.buildStructure(\"stoneMine\")}>Build Stone Mine</button>\r\n                    <button disabled={!buildGoldMine} onClick={() => this.buildStructure(\"goldMine\")}>Build Gold Mine</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContainer;","import React from 'react';\r\n\r\nconst Emoji = (props) => (\r\n    <span\r\n      className=\"emoji\"\r\n      role=\"img\"\r\n      aria-label={props.label ? props.label : \"\"}\r\n      aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n      {props.symbol}\r\n    </span>\r\n);\r\n\r\nclass Nav extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <span>D: {this.props.day}</span> <span>H: {this.props.hours}</span><br />\r\n                <span>VILLAGERS: {this.props.villagers}</span>&nbsp;&nbsp;|&nbsp;&nbsp;<span>WORKERS: {this.props.workers}</span>&nbsp;&nbsp;|&nbsp;&nbsp;\r\n                <Emoji label=\"food\" symbol=\"🍔\" />{this.props.food}&nbsp;&nbsp;&nbsp;<Emoji label=\"wood\" symbol=\"🌲\" />{this.props.wood}&nbsp;&nbsp;&nbsp;<Emoji label=\"rock\" symbol=\"🧱\" />{this.props.stone}&nbsp;&nbsp;&nbsp;<Emoji label=\"coin\" symbol=\"💰\" />{this.props.gold}<br />\r\n                <span>Houses : {this.props.house}</span>&nbsp;&nbsp;|&nbsp;&nbsp;<span>Farm : {this.props.farm}</span>&nbsp;&nbsp;|&nbsp;&nbsp;<span>Sawmill : {this.props.sawmill}</span>&nbsp;&nbsp;|&nbsp;&nbsp;<span>Stone Mine : {this.props.stoneMine}</span>&nbsp;&nbsp;|&nbsp;&nbsp;<span>Gold Mine : {this.props.goldMine}</span><br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport './App.css';\nimport MainContainer from './MainContainer'\nimport Nav from './Nav'\n\nclass App extends React.Component {\n\npeople = Math.floor(Math.random() * (5 - 2 + 1) + 2)\n    \nconstructor(props) {\n    super(props);\n    let savegame = JSON.parse(localStorage.getItem(\"VillagersSave\"))\n    if (savegame !== null) {\n      this.state = savegame\n    } else {\n      this.state = { \n        day: 0,\n        hours: 0,\n        villagers: this.people,\n        workers: 0,\n        food: Math.floor(Math.random() * (7*this.people - 2*this.people + 1)) + 2*this.people,\n        wood: Math.floor(Math.random() * (50 - 20 + 1)) + 20,\n        stone: Math.floor(Math.random() * (50 - 20 + 1)) + 20,\n        gold: Math.floor(Math.random() * (50 - 20 + 1)) + 20,\n        house: 0,\n        farm : 0,\n        sawmill: 0,\n        stoneMine: 0,\n        goldMine: 0\n      }\n    }\n}\n\ntick() {\n  if (this.state.food>=this.state.villagers){\n    this.setState(state => ({\n        hours: state.hours +1\n    }));\n    if (this.state.hours>23) {\n      this.setState({\n        food: this.state.food - (2*this.state.workers+this.state.villagers),\n        day: this.state.day + 1,\n        hours: 0\n      })\n      let tot_struct = this.state.house+this.state.farm+this.state.sawmill+this.state.stoneMine+this.state.goldMine\n      if (this.state.wood >= tot_struct) {\n        this.setState({\n          wood: this.state.wood - tot_struct\n        })\n      }\n    }\n  } else if (this.state.food > 0){\n    this.setState(state => ({\n      hours: state.hours +1\n    }));\n    if (this.state.hours===24) {\n      this.setState({food:0})\n    }\n  }\n  // Structure bonus\n  if (this.state.day % 7 ===0 && this.state.hours ===0 && this.state.wood>0) {\n    this.setState({\n      food: this.state.food + 40 * this.state.farm,\n      wood: this.state.wood + 30 * this.state.sawmill,\n      stone: this.state.stone + 30 * this.state.stoneMine,\n      gold: this.state.gold + 15 * this.state.goldMine \n    })\n  }\n}\n\ncomponentDidMount() {\n  this.interval = setInterval(() => this.tick(), 1000)\n}\n\ncomponentWillUnmount() {\n    clearInterval(this.interval);\n}\n\nupdateRaw = (type, qt) => {\n  if (type==='food') {\n    this.setState({food: this.state.food + qt})\n  } else if (type ==='wood') {  \n      this.setState({wood: this.state.wood + qt})\n  } else if (type ==='stone') {\n      this.setState({stone: this.state.stone + qt})\n  }\n}\n\nupdateStructure = (type) => {\n  switch (type) {\n    case \"house\":\n      this.setState({\n        house: this.state.house + 1,\n        villagers: this.state.villagers + 4,\n        wood: this.state.wood - 20,\n        stone: this.state.stone - 20\n      })\n      break\n    case \"farm\":\n      this.setState({\n        farm: this.state.farm + 1,\n        workers: this.state.workers + 1,\n        wood: this.state.wood - 40,\n        stone: this.state.stone - 40\n      })\n      break\n    case \"sawmill\":\n      this.setState({\n        sawmill: this.state.sawmill +1,\n        workers: this.state.workers +1,\n        wood: this.state.wood - 80,\n        stone: this.state.stone - 50,\n      })\n      break\n    case \"stoneMine\":\n      this.setState({\n        stoneMine: this.state.stoneMine +1,\n        workers: this.state.workers +1,\n        wood: this.state.wood - 150,\n        stone: this.state.stone - 80,\n      })\n      break\n    case \"goldMine\":\n      this.setState({\n        goldMine: this.state.goldMine +1,\n        workers: this.state.workers +1,\n        wood: this.state.wood - 200,\n        stone: this.state.stone - 200,\n      })\n      break\n    default:\n      break\n  }\n\n}\n\nsaveGame() {\n  console.log(\"save\", this.state)\n  localStorage.setItem(\"VillagersSave\", JSON.stringify(this.state))\n}\n\nnewGame() {\n  console.log(\"new\")\n  localStorage.removeItem(\"VillagersSave\")\n}\n  \nrender(){\n    return (\n        <div className=\"App\">\n          <h1>Villagers</h1>\n          <button onClick={() => this.saveGame()}>Save Game</button>\n                    <button onClick={() => this.newGame()}>New Game</button>\n          <Nav {...this.state}/>\n          <MainContainer {...this.state} parentSearchRaw={this.updateRaw} parentBuildStructure={this.updateStructure} />\n        </div>\n      );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}