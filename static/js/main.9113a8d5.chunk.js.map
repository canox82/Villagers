{"version":3,"sources":["Info.js","MainContainer.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Info","React","Component","message","day_start","hour_start","MainContainer","text","unshift","day","hour","this","props","hours","type","qt","Math","floor","random","villagers","workers","parentSearchRaw","putMessage","parentBuildStructure","gameOver","food","buildHouse","wood","stone","buildFarm","buildSawmill","buildStoneMine","buildGoldMine","cooldown_resource","cooldown","className","map","item","index","style","color","disabled","onClick","searchRaw","buildStructure","Nav","gold","house","farm","sawmill","stoneMine","goldMine","App","people","updateRaw","setState","state","updateStructure","savegame","JSON","parse","localStorage","getItem","interval","setInterval","tick","clearInterval","console","log","setItem","stringify","removeItem","saveGame","newGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9113a8d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Info extends React.Component {\r\n    render(){\r\n        return (\r\n            <span>\r\n            <h5>Raw materials consumed</h5>\r\n            <ul>\r\n                <li>1 food X villager every day</li>\r\n                <li>2 wood X house every 10 days</li>\r\n                <li>5 wood X house every 30 days</li>\r\n            </ul>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport Info from './Info';\r\n\r\nconst message = [\"\"]\r\nvar day_start = 0\r\nvar hour_start = 0\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n    putMessage(text) {\r\n        message.unshift(text)\r\n    }\r\n\r\n    cooldown(day, hour) {\r\n        if (this.props.day > day) {\r\n            return this.props.hours + (24-hour)\r\n        } else {\r\n            return this.props.hours - hour\r\n        }\r\n    }\r\n\r\n    searchRaw(type) {\r\n        let qt = Math.floor(Math.random() * ((this.props.villagers-this.props.workers) - 0 + 1)) + 0\r\n        this.props.parentSearchRaw(type, qt);\r\n        this.putMessage(\"Gathered \" + qt + \" \" + type)\r\n        day_start = this.props.day\r\n        hour_start = this.props.hours\r\n    }\r\n\r\n    buildStructure(type) {\r\n        switch (type) {\r\n            case \"house\":\r\n                    this.putMessage(\"House builded, 4 villagers arrived\")\r\n                    this.props.parentBuildStructure(type);\r\n                    break\r\n            case \"farm\":\r\n                    this.putMessage(\"Farm builded, 1 worker used\")\r\n                    this.props.parentBuildStructure(type);\r\n                    break\r\n            default:\r\n                this.putMessage(\"Building not implemented\")\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const gameOver = this.props.food <= this.props.villagers\r\n        const buildHouse = this.props.wood >=20 && this.props.stone>=20\r\n        const buildFarm = this.props.wood >=40 && this.props.stone>=40 && this.props.villagers-this.props.workers>0\r\n        const buildSawmill = this.props.wood >=80 && this.props.stone>=80 && this.props.villagers-this.props.workers>0\r\n        const buildStoneMine = this.props.wood >=150 && this.props.stone>=100 && this.props.villagers-this.props.workers>0\r\n        const buildGoldMine = this.props.wood >=200 && this.props.stone>=200 && this.props.villagers-this.props.workers>0\r\n\r\n        const cooldown_resource = this.cooldown(day_start, hour_start) > 2\r\n\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <Info/>\r\n                    <h5>Messages:</h5>\r\n                    <div className=\"messages\">\r\n                        <ul>\r\n                            {message.map((item,index) => {\r\n                                return (\r\n                                    <li key={index}>{item}</li> \r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"action\">\r\n                    {gameOver ? (\r\n                        <span style={{color:'red'}}>Food Level critic!!!</span>\r\n                    ) : (\r\n                        <span style={{color:'green'}}>Food ok</span>\r\n                    )}\r\n                    <br />\r\n                    {/* Button for manual resource gathering */}\r\n                    <button disabled={!cooldown_resource} onClick={() => this.searchRaw('food')}>Search Food</button>\r\n                    <button disabled={!cooldown_resource} onClick={() => this.searchRaw('wood')}>Search Wood</button>\r\n                    <button disabled={!cooldown_resource} onClick={() => this.searchRaw('stone')}>Search Stone</button>\r\n                    <br />\r\n                    {/* Button for automatic resource gathering */}\r\n                    <button disabled={!buildHouse} onClick={() => this.buildStructure(\"house\")}>Build House</button>\r\n                    <button disabled={!buildFarm} onClick={() => this.buildStructure(\"farm\")}>Build Farm</button>\r\n                    <button disabled={!buildSawmill} onClick={() => this.buildStructure(\"sawmill\")}>Build Sawmill</button>\r\n                    <button disabled={!buildStoneMine} onClick={() => this.buildStructure(\"stoneMine\")}>Build Stone Mine</button>\r\n                    <button disabled={!buildGoldMine} onClick={() => this.buildStructure(\"goldMine\")}>Build Gold Mine</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContainer;","import React from 'react';\r\n\r\nclass Nav extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <span>D: {this.props.day}</span> <span>H: {this.props.hours} / VILLAGERS: {this.props.villagers}</span><span> / WORKERS: {this.props.workers}</span><br></br>\r\n                <span>Food: {this.props.food}</span> <span> / Wood: {this.props.wood} / Stone: {this.props.stone} / Gold: {this.props.gold}</span><br />\r\n                <span>Houses : {this.props.house}</span> / <span>Farm : {this.props.farm}</span> / <span>Sawmill : {this.props.sawmill}</span> / <span>Stone Mine : {this.props.stoneMine}</span> / <span>Gold Mine : {this.props.goldMine}</span><br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport './App.css';\nimport MainContainer from './MainContainer'\nimport Nav from './Nav'\n\nclass App extends React.Component {\n\npeople = Math.floor(Math.random() * (5 - 2 + 1) + 2)\n    \nconstructor(props) {\n    super(props);\n    let savegame = JSON.parse(localStorage.getItem(\"VillagersSave\"))\n    if (savegame !== null) {\n      this.state = savegame\n    } else {\n      this.state = { \n        day: 0,\n        hours: 0,\n        villagers: this.people,\n        workers: 0,\n        food: Math.floor(Math.random() * (7*this.people - 2*this.people + 1)) + 2*this.people,\n        wood: Math.floor(Math.random() * (50 - 20 + 1)) + 20,\n        stone: Math.floor(Math.random() * (50 - 20 + 1)) + 20,\n        gold: Math.floor(Math.random() * (50 - 20 + 1)) + 20,\n        house: 0,\n        farm : 0,\n        sawmill: 0,\n        stoneMine: 0,\n        goldMine: 0\n      }\n    }\n}\n\ntick() {\n  if (this.state.food>=this.state.villagers){\n    this.setState(state => ({\n        hours: state.hours +1\n    }));\n    if (this.state.hours>23) {\n      this.setState({\n        food: this.state.food - this.state.villagers,\n        day: this.state.day + 1,\n        hours: 0\n      })\n    }\n  } else if (this.state.food > 0){\n    this.setState(state => ({\n      hours: state.hours +1\n    }));\n    if (this.state.hours===24) {\n      this.setState({food:0})\n    }\n  }\n  if (this.state.day % 7 ===0 && this.state.hours ===1) {\n    this.setState({\n      food: this.state.food + 20 * this.state.farm\n    })\n  }\n  if (this.state.day % 15 === 0 && this.state.hours===1) {\n    if (this.state.wood>(this.state.house+this.state.farm+this.state.sawmill)) {\n      this.setState({\n        wood: this.state.wood - 2*(this.state.house + this.state.farm + this.state.sawmill)\n      }) \n    } else {\n      this.setState({\n        wood: 0\n      })\n    }\n  }\n}\n\ncomponentDidMount() {\n  this.interval = setInterval(() => this.tick(), 1000)\n}\n\ncomponentWillUnmount() {\n    clearInterval(this.interval);\n}\n\nupdateRaw = (type, qt) => {\n  if (type==='food') {\n    this.setState({food: this.state.food + qt})\n  } else if (type ==='wood') {  \n      this.setState({wood: this.state.wood + qt})\n  } else if (type ==='stone') {\n      this.setState({stone: this.state.stone + qt})\n  }\n}\n\nupdateStructure = (type) => {\n  switch (type) {\n    case \"house\":\n      this.setState({\n        house: this.state.house + 1,\n        villagers: this.state.villagers + 4\n      })\n      break\n    case \"farm\":\n      this.setState({\n        farm: this.state.farm +1,\n        workers: this.state.workers + 1\n      })\n      break\n    default:\n      break\n  }\n\n}\n\nsaveGame() {\n  console.log(\"save\", this.state)\n  localStorage.setItem(\"VillagersSave\", JSON.stringify(this.state))\n}\n\nnewGame() {\n  console.log(\"new\")\n  localStorage.removeItem(\"VillagersSave\")\n}\n  \nrender(){\n    return (\n        <div className=\"App\">\n          <h1>Villagers</h1>\n          <button onClick={() => this.saveGame()}>Save Game</button>\n                    <button onClick={() => this.newGame()}>New Game</button>\n          <Nav {...this.state}/>\n          <MainContainer {...this.state} parentSearchRaw={this.updateRaw} parentBuildStructure={this.updateStructure} />\n        </div>\n      );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}